A company is developing an online payment processing system that supports multiple payment gateways like PayPal, Stripe, and Razorpay. The goal is to design a flexible system where new payment gateways can be added without modifying existing code.

Solution Using Interfaces
    1. Define an Interface The system defines an interface IPaymentGateway that outlines the required methods for any payment gateway.
     
     implementation : The interface should have a method ProcessPayment with one decimal type as input paramter


    2.Implement Different Payment Gateways Each payment gateway implements the IPaymentGateway interface.

     implementation : Two concrete class for Paypal and RazorPay 
    
    3.Use Dependency Injection for Flexibility The system can accept any payment gateway dynamically.

     implementation : 
        Create another class for where declare a reaonnly property of type IPaymentGateway and 

       Create a overloaded constructor which will accept a parameter of type IPaymentGateway, and initialize the property declared earlier.

       Create a  method ProcessAnyPayment to call ProcessPayment method

   4.Client Code The client can choose a payment gateway at runtime.

       Write the code to call ProcessAnyPayment method inside a  console application 