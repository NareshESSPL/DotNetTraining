@model Employee

<h1 class="text-center mb-4">Employee Details</h1>

<div class="container p-4 rounded shadow-sm" style="max-width: 600px; background: #f8f9fa;">
    @using (Html.BeginForm("Submit", "Employee", FormMethod.Post, 
    new { @class = "needs-validation", enctype = "multipart/form-data" }))
    {
        @if (!ViewData.ModelState.IsValid)
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })



        <div class="mb-3">
            @Html.LabelFor(m => m.Name, new { @class = "form-label fw-bold" })
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Enter name" })
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.Age, new { @class = "form-label fw-bold" })
            @Html.TextBoxFor(m => m.Age, new { @class = "form-control", placeholder = "Enter age" })
            @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            <label class="fw-bold">Gender</label><br>
            @foreach (var gender in (List<SelectListItem>)ViewData["Gender"])
            {
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.Gender, gender.Value, new { @class = "form-check-input" })
                    <label class="form-check-label">@gender.Text</label>
                </div>
            }
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.Grade, new { @class = "form-label fw-bold" })
            @Html.DropDownListFor(m => m.Grade, new MultiSelectList(new[] { "A", "B", "C" }), "Choose Option", new { @class = "form-control" }) <!-- DropDownList -->
            @Html.ValidationMessageFor(m => m.Grade, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            <label class="form-label fw-bold">Select Benefits</label><br/>
            @Html.ListBoxFor(m => m.SelectedBenefits, (List<SelectListItem>)ViewData["Benefit"]) <!-- ListBox -->
            @Html.ValidationMessageFor(m => m.SelectedBenefits, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            <label class="form-label fw-bold">Description</label>
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 3, placeholder = "Enter text" }) <!-- TextAreaFor -->
        </div>

        <div class="mb-3">
            <label class="form-label fw-bold">Rank</label>
            @Html.EditorFor(m => m.Rank) <!-- EditorFor -->
        </div>

        <div class="mb-3">
            <label class="form-label fw-bold">Upload File</label>
            <input type="file" name="EmployeeImage" />
        </div>
        

        <div class="mb-3">
            @Html.HiddenFor(m => m.Id) <!-- HiddenFor -->
            @* @Html.Hidden("CustomHidden", "HiddenValue") <!-- Hidden --> *@
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-primary w-100">Submit</button>
        </div>
    }
</div>
@* <div>
    @{
        Html.RenderPartial("_EmployeeList", Model);
    }
</div> *@

@section scripts {
    @Html.Partial("_ValidationScriptsPartial")
}